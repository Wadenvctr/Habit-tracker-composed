version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: habit-tracker-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: habit_tracker
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build: ./backend
    container_name: habit-tracker-api
    environment:
      NODE_ENV: production
      HOST: 0.0.0.0
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_NAME: ${DB_NAME:-habit_tracker}
      TYPEORM_SYNC: ${TYPEORM_SYNC:-true}
      DB_RETRY_ATTEMPTS: ${DB_RETRY_ATTEMPTS:-10}
      DB_RETRY_DELAY_MS: ${DB_RETRY_DELAY_MS:-2000}
      JWT_SECRET: ${JWT_SECRET:-change-me-in-prod}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001',res=>process.exit(0))"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  web:
    build: ./frontend
    container_name: habit-tracker-web
    depends_on:
      - api
    ports:
      - "8080:80"
    restart: unless-stopped

volumes:
  pgdata:
